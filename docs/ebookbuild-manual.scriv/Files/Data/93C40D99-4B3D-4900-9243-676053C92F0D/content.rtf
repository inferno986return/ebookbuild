{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 Sitka Text;}{\f1\fmodern\fcharset0\fprq2 SegoeUI-Bold;}{\f2\fmodern\fcharset0\fprq2 SegoeUI;}{\f3\fmodern\fcharset0\fprq2 JetBrainsMono-Regular;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;\red128\green128\blue128;}
{\*\listtable
{\list\listtemplateid1\listhybrid
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\loch\af0\hich\af0\dbch\af0\uc1\u8226\'95;}{\levelnumbers;}\f2\fs28\b0\i0\fi-1185\li1707\lin1707}{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\loch\af0\hich\af0\dbch\af0\uc1\u8226\'95;}{\levelnumbers;}\f2\fs28\b0\i0\fi-1185\li1707\lin1707}{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\f0\fs24\cf0
\pard\plain \tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\ltrch\loch {\f1\fs36\b1\i0 Future Content}
\par\plain {\f2\fs28\b0\i0 These are chapters I don\loch\af2\hich\af2\dbch\af2\uc1\u8217\'92t have much content for at the moment. Stay tuned!}
\par\plain \f1\fs36\b1\i0
\par\plain {\f1\fs28\b1\i0 Bookscanning and OCR}
\par\plain \f2\fs28\b0\i0
\par\plain {\f2\fs28\b0\i0 In my last job my boss used an inverted \loch\af2\hich\af2\dbch\af2\uc1\u8220\'93V\u8221\'94 cradle made from glass and metal, then would take a photograph of each page using a DSLR camera. The photos would be imported into ABBYY FineReader for the text to be extracted using optical character recognition (OCR), before exporting to a Microsoft Word document. He considered this a significant improvement over the previous method of destructively removing each page individually from the binding and then scanning them with a flatbed scanner.}
\par\plain {\f2\fs28\b0\i0 I am still developing my bookscanning process. I have been looking into free software alternatives to ABBYY FineReader such as Google\loch\af2\hich\af2\dbch\af2\uc1\u8217\'92s Tesseract which is used in OpenOCR. I often make use of Google Photos\u8217\'92 own OCR engine and find it highly accurate. In the long-term I plan on purchasing and testing the CZUR book scanner.}
\par\plain {\field{\*\fldinst HYPERLINK "https://www.diybookscanner.org/en/index.html"}{\fldrslt\f2\fs28\b0\i0 https://www.diybookscanner.org/en/index.html}}{\f2\fs28\b0\i0  has instructions on a homemade bookscanner. The website looks to have been neglected for a significant period of time and has missing images. Check }{\field{\*\fldinst HYPERLINK "https://archive.is"}{\fldrslt\f2\fs28\b0\i0 https://archive.is}}{\f2\fs28\b0\i0 /}
\par\plain \f2\fs28\b0\i0
\par\plain {\f1\fs28\b1\i0 Typesetting}
\par\plain \f1\fs28\b1\i0
\par\pard\plain \tx235\tx720\li720\fi-500\ltrch\loch \ls1\ilvl0{\listtext	\f2\fs28\b0\i0 \uc0\u8226 	}{\f2\fs28\b0\i0 Affinity Publisher (recommended)}
\par\plain \ilvl0{\listtext	\f2\fs28\b0\i0 \uc0\u8226 	}{\f2\fs28\b0\i0 Adobe InDesign}
\par\pard\plain \tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\ltrch\loch \f1\fs28\b1\i0
\par\plain {\f1\fs28\b1\i0 E-book distribution}
\par\plain \f2\fs28\b0\i0
\par\plain {\f2\fs28\b0\i0 You now have a finished ePub. But how do you sell it?}
\par\plain \f2\fs28\b0\i0
\par\pard\plain \tx235\tx720\li720\fi-500\ltrch\loch \ls2\ilvl0{\listtext	\f2\fs28\b0\i0 \uc0\u8226 	}{\f2\fs28\b0\i0 Amazon Kindle - Kindle Unlimited}
\par\plain \ilvl0{\listtext	\f2\fs28\b0\i0 \uc0\u8226 	}{\f2\fs28\b0\i0 Google Play Books}
\par\plain \ilvl0{\listtext	\f2\fs28\b0\i0 \uc0\u8226 	}{\f2\fs28\b0\i0 Apple Books}
\par\plain \ilvl0{\listtext	\f2\fs28\b0\i0 \uc0\u8226 	}{\f2\fs28\b0\i0 Kobo}
\par\plain \ilvl0{\listtext	\f2\fs28\b0\i0 \uc0\u8226 	}{\f2\fs28\b0\i0 itch.io}
\par\pard\plain \tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\ltrch\loch \f2\fs28\b0\i0
\par\plain {\f1\fs28\b1\i0 Digital Rights Management (DRM)}
\par\plain \f1\fs28\b1\i0
\par\plain {\f2\fs28\b0\i0 The ePub standard is intentionally neutral on the use of digital rights management (DRM) to control how customers interact with their e-book purchase. I am personally hostile to DRM because I find it inconvenient for the customer and most e-book DRM standards are bypassable anyway with freely-available public tools.}
\par\plain {\f2\fs28\b0\i0 In my own research the DRM scheme I found the most difficult to bypass was VitalSource\loch\af2\hich\af2\dbch\af2\uc1\u8217\'92s e-book file .vbk. Previously it was possible to see the XHTML source with the Chrome inspector, though that was patched recently after.}
\par\plain \f2\fs28\b0\i0
\par\plain {\f2\fs28\b0\i0 Adobe DRM (ADEPT)}
\par\plain \f2\fs28\b0\i0
\par\plain {\f2\fs28\b0\i0 Adobe DRM is used by Google Play Books and several other distributors, allowing offline reading on Adobe Digital Editions and Bluefire. It requires the user to activate Adobe Digital Editions with their Adobe ID (or create one), then authorise their computer. Once authorised download the .acsm file and then import it to download the actual ePub.}
\par\plain \f2\fs28\b0\i0
\par\plain {\f2\fs28\b0\i0 Adobe allow a total of 6 authorisations and it seems that resetting this amount requires contacting their customer support: }{\field{\*\fldinst HYPERLINK "https://community.adobe.com/t5/digital-editions-discussions/i-need-to-have-my-authorizations-reset-for-digital-editions-but-cannot-contact-anyone-at-adobe/td-p/5511638"}{\fldrslt\f2\fs24 https://community.adobe.com/t5/digital-editions-discussions/i-need-to-have-my-authorizations-reset-for-digital-editions-but-cannot-contact-anyone-at-adobe/td-p/5511638}}
\par\pard\plain \tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\ltrch\loch \f2\fs28\b0\i0
\par\plain {\f2\fs28\b0\i0 From personal experience I have found Adobe DRM to be difficult to use requiring first contacting Google\loch\af2\hich\af2\dbch\af2\uc1\u8217\'92s customer support and then on online forums for activation.}
\par\plain {\f2\fs28\b0\i0 Keep in mind that when distributing using Adobe Digital Editions the XHTML and CSS code is accessible by extracting the ePub using an archiving program like 7-Zip.}
\par\plain \f2\fs28\b0\i0
\par\plain {\f2\fs28\b0\i0 Amazon DRM - AZW, KFX}
\par\plain \f2\fs28\b0\i0
\par\plain {\f2\fs28\b0\i0 Amazon use their own DRM for their Kindle e-books. The current standard is (KFX). Amazon provide reading apps on the web, smartphone/tablet and on Windows and macOS\loch\af2\hich\af2\dbch\af2\uc1\u8230\'85}
\par\pard\plain \tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\ltrch\loch \f2\fs28\b0\i0
\par\plain {\f1\fs28\b1\i0 ONIX for Books}
\par\plain \f2\fs28\b0\i0
\par\plain {\f2\fs28\b0\i0 ONIX for Books is an XML-based standard for sharing book data between publishers, distributors and retailers using predefined fields and categories (defined as \loch\af2\hich\af2\dbch\af2\uc1\u8220\'93code lists\u8221\'94).}
\par\plain {\f2\fs28\b0\i0 I plan on creating my own libre ONIX editor and documentation for the perfect ONIX document. However, for the time being I recommend looking into ONIXEdit or creating your own ONIX record using spreadsheet software such as Microsoft Excel.}
\par\plain {\f2\fs28\b0\i0 https://www.editeur.org/14/Code-Lists/}
\par\plain \f2\fs28\b0\i0
\par\plain {\f1\fs28\b1\i0 Source code obfuscation}
\par\plain {\f2\fs24\b0\i0 \loch\af2\hich\af2\dbch\af2\uc1\u8220\'93In software development, }{\f1\fs24\b1\i0 obfuscation}{\f2\fs24\b0\i0  is the deliberate act of creating source or machine code that is difficult for humans to understand.\loch\af2\hich\af2\dbch\af2\uc1\u8221\'94 -Obfuscation (software) article on Wikipedia}
\par\plain \f2\fs28\b0\i0
\par\plain {\f2\fs28\b0\i0 Source code obfuscation in software development makes it trickier to reverse-engineer a compile executable to find the original source code. Usually these are alterations made before or during compile time which don\loch\af2\hich\af2\dbch\af2\uc1\u8217\'92t alter functionality.}
\par\plain {\f2\fs28\b0\i0 While }{\f3\fs24\b0\i0 ebookbuild}{\f2\fs28\b0\i0  is libre software, I am interested in ways of achieving this for users who want an output that hides the exact XHTML and CSS code from a tinkering end-user.}
\par\plain {\f2\fs28\b0\i0 After giving this process some thought I can only think of using Calibre ( ironically given ebookbuild\loch\af2\hich\af2\dbch\af2\uc1\u8217\'92s goal to avoid autogenerated \u8220\'93meatground\u8221\'94 code inside its ePub output). Calibre in my experience has a complex structure to its XHTML and CSS structure.}
\par\plain \f2\fs28\b0\i0
\par\plain {\f1\fs28\b1\i0 Fingerprinting}
\par\plain \f2\fs28\b0\i0
\par\plain {\f2\fs28\b0\i0 Fingerprinting is a method for identifying unique builds of an e-book. This could be used for review copies or ARC (advanced reader copies) to identify who leaked an e-book prior to release.}
\par\plain {\f2\fs28\b0\i0 So far my only approach is to rely on checksums as they are unique to each build. Another way is to add comments referring to the reviewer in the XHTML or CSS code.}}